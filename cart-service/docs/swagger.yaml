basePath: /
definitions:
  handler.AddToCartReq:
    properties:
      product_id:
        example: 2
        type: integer
      quantity:
        example: 3
        type: integer
    type: object
  handler.CartResponse:
    properties:
      id:
        example: 1
        type: integer
      price:
        example: 10000
        type: integer
      product_id:
        example: 10
        type: integer
      quantity:
        example: 2
        type: integer
      subtotal:
        example: 20000
        type: integer
    type: object
  handler.UpdateQuantityReq:
    properties:
      quantity:
        type: integer
    type: object
host: localhost:8083
info:
  contact: {}
  description: Manage shopping cart items
  title: Cart Service API
  version: "1.0"
paths:
  /cart:
    delete:
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Clear all item in the cart
      tags:
      - Cart
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.CartResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List cart items
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: Add a product to the cart (can add amount of it if already in the
        cart). Call product-service to get stock and price
      parameters:
      - description: Add to cart payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.AddToCartReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.CartResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add item to cart
      tags:
      - Cart
  /cart/{id}:
    delete:
      parameters:
      - description: Cart item ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove an item from cart
      tags:
      - Cart
    put:
      consumes:
      - application/json
      parameters:
      - description: Cart item ID
        in: path
        name: id
        required: true
        type: integer
      - description: New quantity
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateQuantityReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CartResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update cart item quantity
      tags:
      - Cart
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
